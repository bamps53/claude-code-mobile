# CI/CD Workflow for Claude Code Mobile
# Runs tests, linting, and builds on every PR and push to main

name: CI/CD Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  NODE_VERSION: '18'

jobs:
  # Code Quality & Testing
  quality:
    name: Code Quality & Tests
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci --legacy-peer-deps

      - name: Run TypeScript type checking
        run: npm run typecheck

      - name: Run ESLint
        run: npm run lint

      - name: Run Prettier format check
        run: npx prettier --check .

      - name: Run unit tests
        run: npm test -- --coverage --watchAll=false

      - name: Upload coverage reports
        uses: codecov/codecov-action@v5
        with:
          file: ./coverage/lcov.info
          fail_ci_if_error: false

  # Security & Dependency Analysis
  security:
    name: Security Analysis
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci --legacy-peer-deps

      - name: Run security audit
        run: npm audit --audit-level=moderate

      - name: Check for vulnerable dependencies
        run: npx audit-ci --moderate

  # EAS Build (Development)
  build-development:
    name: EAS Development Build
    runs-on: ubuntu-latest
    needs: [quality, security]
    if: github.ref == 'refs/heads/main'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Setup Expo CLI
        run: npm install -g @expo/cli eas-cli

      - name: Install dependencies
        run: npm ci --legacy-peer-deps

      - name: Authenticate with Expo
        run: eas login --non-interactive
        env:
          EXPO_TOKEN: ${{ secrets.EXPO_TOKEN }}

      - name: Build development app (Android)
        run: eas build --platform android --profile development --non-interactive --wait
        env:
          EXPO_TOKEN: ${{ secrets.EXPO_TOKEN }}

      - name: Build development app (iOS)
        run: eas build --platform ios --profile development --non-interactive --wait
        env:
          EXPO_TOKEN: ${{ secrets.EXPO_TOKEN }}

  # EAS Build (Production) - Only on releases
  build-production:
    name: EAS Production Build
    runs-on: ubuntu-latest
    needs: [quality, security]
    if: startsWith(github.ref, 'refs/tags/v')
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Setup Expo CLI
        run: npm install -g @expo/cli eas-cli

      - name: Install dependencies
        run: npm ci --legacy-peer-deps

      - name: Authenticate with Expo
        run: eas login --non-interactive
        env:
          EXPO_TOKEN: ${{ secrets.EXPO_TOKEN }}

      - name: Build production app (Android)
        run: eas build --platform android --profile production --non-interactive --wait
        env:
          EXPO_TOKEN: ${{ secrets.EXPO_TOKEN }}

      - name: Build production app (iOS)
        run: eas build --platform ios --profile production --non-interactive --wait
        env:
          EXPO_TOKEN: ${{ secrets.EXPO_TOKEN }}

      - name: Submit to stores
        run: |
          eas submit --platform android --latest
          eas submit --platform ios --latest
        env:
          EXPO_TOKEN: ${{ secrets.EXPO_TOKEN }}